name: SP500 Data Update

on:
  schedule:            # 定时任务 (每天北京时间 8:00 运行)
    - cron: '0 0 * * *'   # UTC 时间 0:00 (换算成北京时间 8:00)
  workflow_dispatch:   # 手动触发

concurrency:           # 添加并发控制，防止同时运行多个工作流
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest

    permissions:       # 确保 GitHub Token 有写入权限
      contents: write

    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史，便于 rebase 操作

      - name: 设置 Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 安装依赖
        run: |
          pip install -r requirements.txt

      - name: 运行原Python脚本
        run: |
          python sp500_data.py

      - name: 运行增量追加脚本
        run: |
          python append_new_data.py

      - name: 运行缠论处理脚本
        run: |
          python chan_processor.py

      - name: 配置 Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: 拉取远程最新更改
        run: |
          # 尝试拉取远程更改，使用 rebase 方式合并
          git pull --rebase origin main || echo "拉取失败，继续执行"

      - name: 添加和提交所有更改
        run: |
          # 添加所有可能更改的文件
          git add sp500_data/*.csv || true
          git add processed_data/*.csv || true
          git add sequence_data/*.csv || true
          git add sequence_data/*.json || true
          git add state/*.json || true
          
          # 检查是否有更改需要提交
          if git diff --cached --quiet; then
            echo "⚠️ 没有新数据需要提交，跳过推送"
          else
            git commit -m "自动更新: SP500数据和缠论分析 $(date +'%Y-%m-%d %H:%M')"
            echo "✅ 更改已提交"
          fi

      - name: 推送更改到远程
        run: |
          # 尝试推送，如果失败则拉取最新更改并重试
          if ! git push origin main; then
            echo "推送失败，尝试拉取最新更改并重新应用提交..."
            git pull --rebase origin main
            git push origin main
          fi
          echo "✅ 更改已成功推送到远程仓库"
